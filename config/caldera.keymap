include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE 0
#define UTIL 1
#define BRKT 2
#define NAV 3

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                  display-name = "Base"
// ---------------------------------------------------------------------------------
// |   `  |  1  |  2  |  3  |  4  |  5  |     |  6  |  7  |  8  |  9  |  0  | BKSP |
// |  TAB |  Q  |  W  |  E  |  R  |  T  |     |  Y  |  U  |  I  |  O  |  P  |  \   |
// | CAPS |  A  |  S  |  D  |  F  |  G  |     |  H  |  J  |  K  |  L  |  ;  |  ENT |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |     |  N  |  M  |  ,  |  .  |  /  |SHFT/'|
// | CTRL | ALT | GUI | SPC | NAV | SPC |     | SPC |BRKT |     |     | GUI |T-UTIL|
                        bindings = <
   &kp GRAVE       &kp N1    &kp N2    &kp N3     &kp N4     &kp N5               &kp N6     &kp N7   &kp N8     &kp N9    &kp N0    &kp BSPC
   &kp TAB         &kp Q     &kp W     &kp E      &kp R      &kp T                &kp Y      &kp U    &kp I      &kp O     &kp P     &kp BSLH
   &mt LSHFT CAPS  &kp A     &kp S     &kp D      &kp F      &kp G                &kp H      &kp J    &kp K      &kp L     &kp SEMI  &kp RET
   &kp LSHFT       &kp Z     &kp X     &kp C      &kp V      &kp B                &kp N      &kp M    &kp COMMA  &kp DOT   &kp FSLH  &mt RSHFT APOS
   &kp LCTRL       &kp LALT  &kp LGUI  &kp SPACE  &mo NAV    &kp SPACE            &kp SPACE  &mo BRKT &trans     &trans    &kp RGUI  &tog UTIL
                        >;
                };

                utility_layer {
                  display-name = "Utilities"
// ------------------------------------------------------------------------------------------------------------
// |       |       |   =   |   /   |   *   |       |          | BT 1  | BT 2  | BT 3  | BT 4  |       |       |
// |       |   -   |   7   |   8   |   9   |       |          |       |       |       |       |       |       |
// |       |   +   |   4   |   5   |   6   |       |          |       |       |       |       |       |       |
// |       |  ENT  |   1   |   2   |   3   |       |          |       |       |       |       |       |       |
// |       |       |       |       |   .   |  SPC  |          |       |       |       |       |       |       |
                        bindings = <
   &trans    &trans         &kp KP_EQUAL &kp KP_DIVIDE   &kp KP_MULTIPLY  &trans                 &BT_SEL 0    &BT_SEL 1    &BT_SEL 2     &BT_SEL 3   &trans  &trans
   &trans    &kp KP_MINUS   &kp KP_N7    &kp KP_N8       &kp KP_N9        &trans                 &trans       &trans       &trans        &trans      &trans  &trans
   &trans    &kp KP_PLUS    &kp KP_N4    &kp KP_N5       &kp KP_N6        &trans                 &trans       &kp K_VOL_DN &kp K_VOL_UP  &trans      &trans  &trans
   &trans    &kp RET        &kp KP_N1    &kp KP_N2       &kp KP_N3        &trans                 &trans       &trans       &trans        &trans      &trans  &trans
   &trans    &trans         &trans       &trans          &kp KP_DOT       &kp SPACE              &trans       &trans       &trans        &trans      &trans  &trans
                        >;
                };

                bracket_layer {
                  display-name = "Brackets"
// ------------------------------------------------------------------------------------------------------------
// |       |       |       |   <   |   >   |       |          |       |       |       |       |       |       |
// |       |       |       |   (   |   )   |       |          |       |       |       |       |       |       |
// |       |       |       |   [   |   ]   |       |          |       |       |       |       |       |       |
// |       |       |       |   {   |   }   |       |          |       |       |       |       |       |       |
// |       |       |       |       |       |       |          |       |       |       |       |       |       |
                        bindings = <
   &trans    &trans   &trans    &kp LT     &kp GT     &trans               &trans    &trans   &trans   &trans   &trans  &trans
   &trans    &trans   &trans    &kp LPAR   &kp RPAR   &trans               &trans    &trans   &trans   &trans   &trans  &trans
   &trans    &trans   &trans    &kp LBKT   &kp RBKT   &trans               &trans    &trans   &trans   &trans   &trans  &trans
   &trans    &trans   &trans    &kp LBRC   &kp RBRC   &trans               &trans    &trans   &trans   &trans   &trans  &trans
   &trans    &trans   &trans    &trans     &trans     &trans               &trans    &trans   &trans   &trans   &trans  &trans
                        >;
                };
                nav_layer {
                  display-name = "Navigation"
// ------------------------------------------------------------------------------------------------------------
// |       |       |       |       |       |       |          |       |       |       |       |       |       |
// |       |       |       |       |       |  CTRL |          | pg up |       |  up   |       |       |       |
// |       |       |       |       |       |  ALT  |          | up dn | left  | down  | right |       |       |
// |       |       |       |       |       |  GUI  |          |       |       |       |       |       |       |
// |       |       |       |       |       |       |          |       |       |       |       |       |       |
                        bindings = <
   &trans    &trans   &trans    &trans     &trans     &trans               &trans     &trans      &trans     &trans     &trans  &trans
   &trans    &trans   &trans    &trans     &kp LCTRL  &trans               &kp PG_UP  &trans      &kp UP     &trans     &trans  &trans
   &trans    &trans   &trans    &trans     &kp LALT   &trans               &kp PG_DN  &kp LEFT    &kp DOWN   &kp RIGHT  &trans  &trans
   &trans    &trans   &trans    &trans     &kp LGUI   &trans               &trans     &trans      &trans     &trans     &trans  &trans
   &trans    &trans   &trans    &trans     &trans     &trans               &trans     &trans      &trans     &trans     &trans  &trans
                        >;
                };
        };
};